#+title: Auto Browser
#+author: Qiqi Jin
#+language: en

There are many exciting online services, and I hope to access them using Emacs.

Auto Browser is a bridge between Emacs and the browser, allowing control of the browser and quick access to web pages.

It only supports Chromium-based browsers because it relies on [[https://drissionpage.cn/get_start/installation][drissionpage]].

Auto Browser provides some simple APIs to control the browser and access pages and elements on a page. You can see the API reference here.

* Prerequisites

*Chromium-based browsers*: Your daily browser.
*Python* : 3.6 and above

** Require Packages
+ *websocket-bridge*: A bridge that connects Emacs and Python programs via WebSocket.
+ *shr* : To render html.

** Install
+ clone the project in your own emacs configuration files directory, like:
  #+BEGIN_SRC sh
    git clone git@github.com:ginqi7/auto-browser.git ~/.emacs.d/lisp/auto-browser
  #+END_SRC

+ add the path to 'load-path'
  #+BEGIN_SRC emacs-lisp
    (add-to-list 'load-path (expand-file-name "~/.emacs.d/lisp/d/lisp/auto-browser"))
    (add-to-list 'load-path (expand-file-name "~/.emacs.d/lisp/d/lisp/auto-browser/plugins"))
  #+END_SRC

** Reuse existing browser instance
Run Chrome with --remote-debugging-port=9222
#+begin_src shell
  "/Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome" --remote-debugging-port=9222
#+end_src

* Configuration
Here are a few variables that can be used for configuration:
#+BEGIN_SRC emacs-lisp
  (require 'auto-browser)
  (require 'anki) ;; Optional, If you use anki web.
  (require 'miniflux) ;; Optional, If you use miniflux web.
  (require 'web-ai) ;; Optional, If you use a simple web chat AI service.
#+end_src

* Examples
** Anki
[[file:examples/anki.gif]]
** Miniflux
[[file:examples/miniflux.gif]]
** Web AI
[[file:examples/ai.gif]]
